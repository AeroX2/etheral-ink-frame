import subprocess

from celery import shared_task, Celery
from config import settings

app = FastAPI()

celery = Celery(
    __name__,
    broker=settings.CELERY_BROKER_URL,
    backend=settings.CELERY_RESULT_BACKEND
)

@celery.task
def generate_image(prompt: str):

def start_process(command):
    # Use subprocess.Popen to start the process and capture its output
    process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

    # Read the output and error streams in real-time
    while True:
        # Read a line from the standard output (stdout)
        output_line = process.stdout.readline()
        if output_line == '' and process.poll() is not None:
            break

        # Process and print the output
        print("Output:", output_line.strip())

        # Read a line from the standard error (stderr)
        error_line = process.stderr.readline()
        if error_line == '' and process.poll() is not None:
            break

        # Process and print the error
        print("Error:", error_line.strip())

    # Wait for the process to complete
    process.wait()

    # Print the final return code of the process
    print("Return code:", process.returncode)
